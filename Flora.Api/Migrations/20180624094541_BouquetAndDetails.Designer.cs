// <auto-generated />
using Flora.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flora.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180624094541_BouquetAndDetails")]
    partial class BouquetAndDetails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("Flora.Api.Models.Arrangement", b =>
                {
                    b.Property<int>("ArrangmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BouquetDetailId");

                    b.Property<int>("MaterialCount");

                    b.Property<int>("MaterialId");

                    b.HasKey("ArrangmentId");

                    b.HasIndex("BouquetDetailId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Arrangement");
                });

            modelBuilder.Entity("Flora.Api.Models.Bouquet", b =>
                {
                    b.Property<int>("BouquetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("BouquetId");

                    b.ToTable("Bouquet");

                    b.HasData(
                        new { BouquetId = 1, Name = "Gül Bahçesi" },
                        new { BouquetId = 2, Name = "Gelinlikli Güller" },
                        new { BouquetId = 3, Name = "Orkide" }
                    );
                });

            modelBuilder.Entity("Flora.Api.Models.BouquetDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BouquetId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Size");

                    b.HasKey("DetailId");

                    b.HasIndex("BouquetId");

                    b.ToTable("BouquetDetail");

                    b.HasData(
                        new { DetailId = 1, BouquetId = 1, Price = 10m, Size = "S" },
                        new { DetailId = 2, BouquetId = 1, Price = 15m, Size = "M" },
                        new { DetailId = 3, BouquetId = 1, Price = 20m, Size = "L" },
                        new { DetailId = 4, BouquetId = 2, Price = 12m, Size = "S" },
                        new { DetailId = 5, BouquetId = 2, Price = 16m, Size = "M" },
                        new { DetailId = 6, BouquetId = 2, Price = 20m, Size = "L" },
                        new { DetailId = 7, BouquetId = 3, Price = 20m, Size = "S" },
                        new { DetailId = 8, BouquetId = 3, Price = 25m, Size = "M" },
                        new { DetailId = 9, BouquetId = 3, Price = 30m, Size = "L" }
                    );
                });

            modelBuilder.Entity("Flora.Api.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");

                    b.HasData(
                        new { MaterialId = 1, Name = "Gül" },
                        new { MaterialId = 2, Name = "Papatya" },
                        new { MaterialId = 3, Name = "Orkide" },
                        new { MaterialId = 4, Name = "Süslemeler" }
                    );
                });

            modelBuilder.Entity("Flora.Api.Models.MaterialSpecification", b =>
                {
                    b.Property<int>("MaterialId");

                    b.Property<int>("SpecificationId");

                    b.HasKey("MaterialId", "SpecificationId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("MaterialSpecification");

                    b.HasData(
                        new { MaterialId = 1, SpecificationId = 1 },
                        new { MaterialId = 1, SpecificationId = 2 },
                        new { MaterialId = 1, SpecificationId = 3 },
                        new { MaterialId = 2, SpecificationId = 1 },
                        new { MaterialId = 2, SpecificationId = 3 },
                        new { MaterialId = 3, SpecificationId = 1 },
                        new { MaterialId = 4, SpecificationId = 3 }
                    );
                });

            modelBuilder.Entity("Flora.Api.Models.Specification", b =>
                {
                    b.Property<int>("SpecificationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SpecificationId");

                    b.ToTable("Specifications");

                    b.HasData(
                        new { SpecificationId = 1, Name = "Çiçekli" },
                        new { SpecificationId = 2, Name = "Dikenli" },
                        new { SpecificationId = 3, Name = "Yapraklı" }
                    );
                });

            modelBuilder.Entity("Flora.Api.Models.Arrangement", b =>
                {
                    b.HasOne("Flora.Api.Models.BouquetDetail", "BouquetDetail")
                        .WithMany("Materials")
                        .HasForeignKey("BouquetDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Flora.Api.Models.Material", "Material")
                        .WithMany("Arrangments")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flora.Api.Models.BouquetDetail", b =>
                {
                    b.HasOne("Flora.Api.Models.Bouquet", "Bouquet")
                        .WithMany("BouquetTypes")
                        .HasForeignKey("BouquetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flora.Api.Models.MaterialSpecification", b =>
                {
                    b.HasOne("Flora.Api.Models.Material", "Material")
                        .WithMany("MaterialSpecifications")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Flora.Api.Models.Specification", "Specification")
                        .WithMany()
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
